// src/shared/hasOwnProperty.js
var { hasOwnProperty } = Object.prototype;
var hasOwnProperty_default = hasOwnProperty;

// src/shared/ReactSymbols.js
var REACT_ELEMENT_TYPE = Symbol.for("react.element");

// src/react/src/jsx/ReactJSXElement.js
function hasValidKey(config) {
  return config.key !== void 0;
}
function hasValidRef(config) {
  return config.ref !== void 0;
}
var RESERVED_PROPS = {
  key: true,
  ref: true,
  _self: true,
  _source: true
};
function ReactElement(type, key, ref, props) {
  return {
    //这就是一个react元素，就是一个虚拟dom
    $$typeOf: REACT_ELEMENT_TYPE,
    type,
    key,
    ref,
    props
  };
}
function jsxDEV(type, config) {
  let propName;
  let props = {};
  let key = null;
  let ref = null;
  if (hasValidKey(config)) {
    key = config.key;
  }
  if (hasValidRef(config)) {
    ref = config.ref;
  }
  for (propName in config) {
    if (hasOwnProperty_default.call(config, propName) && !RESERVED_PROPS.hasOwnProperty[propName]) {
      props[propName] = config[propName];
    }
  }
  return ReactElement(type, key, ref, props);
}
export {
  jsxDEV
};
//# sourceMappingURL=react_jsx-dev-runtime.js.map
